elapsedTime = from(bucket: "power_consumption_raw")
    |> range(start: -1d)
    |> filter(fn: (r) => r["_measurement"] == "electricity_meter")
    |> filter(fn: (r) => r["location"] == "home")
    |> filter(fn: (r) => r["_field"] == "turns")
    |> sort(columns: ["_time"])
    |> elapsed(unit: 1ms)
    |> set(key: "_field", value: "elapsed")
    |> map(fn: (r) => ({ r with _value: r.elapsed }))
    |> drop(columns: ["elapsed"])

measurement = from(bucket: "power_consumption_raw")
    |> range(start: -1d)
    |> filter(fn: (r) => r["_measurement"] == "electricity_meter")
    |> filter(fn: (r) => r["location"] == "home")

union(tables: [elapsedTime, measurement])
    |> pivot(rowKey: ["_time"], columnKey: ["_field"], valueColumn: "_value")
    |> map(fn: (r) => ({r with _value: float(v: r.turns) / float(v: r.power_per_turn) * float(v: 360000) / float(v: r.elapsed) * float(v: 1000) }))
    |> filter(fn: (r) => r._value >= 0)